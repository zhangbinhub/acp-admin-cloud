version: "3.1"
services:
  redis-acp:
    image: redis:6.0.14
    container_name: redis-acp
    restart: always
    ports:
      - "6379:6379"
    networks:
      - elk
  #    command: redis-server --requirepass ${pwd} --notify-keyspace-events Eglx

  zookeeper:
    image: zookeeper:3.7.0
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    networks:
      - elk
    ports:
      - "21810:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181

  kafka0:
    image: wurstmeister/kafka:2.13-2.7.0
    hostname: kafka0
    container_name: kafka0
    restart: always
    ports:
      - "9092:9092"
    networks:
      - elk
    environment:
      # add the entry "127.0.0.1    kafka0" to your /etc/hosts file
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://10.100.106.116:9092"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 0
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      #      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
      EXTRA_ARGS: "-name kafkaServer -loggc"
      #      JMX_PORT: 9999
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-manager:
    image: sheepkiller/kafka-manager
    container_name: kafka-manager
    restart: always
    networks:
      - elk
    environment:
      ZK_HOSTS: zookeeper:2181
    ports:
      - "9000:9000"
    expose:
      - 9000
    depends_on:
      - zookeeper

  zipkin-server:
    image: openzipkin/zipkin:2.23.2
    container_name: zipkin-server
    restart: always
    networks:
      - elk
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka0:9092
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch-acp:9200
    ports:
      - "9411:9411"
    depends_on:
      - elasticsearch-acp
      - kafka0

  zipkin-dependencies:
    image: openzipkin/zipkin-dependencies:2.6.3
    container_name: zipkin-dependencies
    restart: always
    networks:
      - elk
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch-acp:9200
    depends_on:
      - elasticsearch-acp

  elasticsearch-acp:
    image: elasticsearch:7.12.0
    container_name: elasticsearch-acp
    hostname: elasticsearch-acp
    restart: always
    networks:
      - elk
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - TZ='Asia/Shanghai'
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es1/elasticsearch/data:/usr/share/elasticsearch/data
      - ./es1/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

  kibana-acp:
    image: kibana:7.12.0
    container_name: kibana-acp
    restart: always
    networks:
      - elk
    ports:
      - "5601:5601"
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      ELASTICSEARCH_URL: http://elasticsearch-acp:9200
    depends_on:
      - elasticsearch-acp

  logstash-acp:
    image: logstash:7.12.0
    container_name: logstash-acp
    restart: always
    networks:
      - elk
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash/config-dir:/config-dir
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    command: logstash -f /config-dir
    environment:
      XPACK_MONITORING_ENABLED: "true"
      XPACK_MONITORING_ELASTICSEARCH_URL: http://elasticsearch-acp:9200
    depends_on:
      - elasticsearch-acp
      - kafka0

#  zoonavigator-api:
#    image: docker.io/elkozmon/zoonavigator-api
#    environment:
#      SERVER_HTTP_PORT: 9005
#    networks:
#      - elk
#    restart: unless-stopped
#    depends_on:
#      - zookeeper
#
#  zoonavigator-web:
#    image: docker.io/elkozmon/zoonavigator-web
#    ports:
#      - "8004:8000"
#    networks:
#      - elk
#    environment:
#      API_HOST: "zoonavigator-api"
#      API_PORT: 9005
#    restart: unless-stopped
#    links:
#      - zoonavigator-api
#    depends_on:
#      - zoonavigator-api
#
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    networks:
#      - elk
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    networks:
#      - elk
#    ports:
#      - 3000:3000
#    depends_on:
#      - prometheus
#    environment:
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#
#  setup_grafana_datasource:
#    image: appropriate/curl
#    container_name: setup_grafana_datasource
#    networks:
#      - elk
#    depends_on:
#      - grafana
#    volumes:
#      - ./prometheus/create-datasource-and-dashboard.sh:/create.sh:ro
#    command: /create.sh
networks:
  elk:
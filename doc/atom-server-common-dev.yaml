info:
  api-document: /doc.html
# ===============================
# = Log To File Config
# ===============================
logging:
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
  level:
    com.alibaba.nacos.client: warn
    org.springframework.cloud.function: warn
# ===============================
# = Spring Config
# ===============================
spring:
  redis:
    url: redis://127.0.0.1:6379
  kafka:
    bootstrap-servers: ${spring.cloud.stream.kafka.binder.brokers}
  zipkin:
    sender:
      type: kafka
  cloud:
    loadbalancer:
      cache:
        ttl: 5s
    stream:
      default-binder: kafka
      kafka:
        binder:
          brokers: 127.0.0.1:9092
          # 0代表：不进行消息接收是否成功的确认(默认值)；
          # 1代表：当Leader副本接收成功后，返回接收成功确认信息；
          # -1代表：当Leader和Follower副本都接收成功后，返回接收成功确认信息；
          required-acks: -1
    sentinel:
      datasource:
        nacos-degrade:
          nacos:
            username: ${spring.cloud.nacos.username}
            password: ${spring.cloud.nacos.password}
            server-addr: ${spring.cloud.nacos.server-addr}
            data-id: sentinel-degrade-${spring.profiles.active}
            namespace: ${spring.cloud.nacos.discovery.namespace}
            group-id: ${spring.profiles.active}
            data-type: json
            rule-type: degrade
  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    hikari:
      maximum-pool-size: 5
      minimum-idle: 5
      pool-name: acp-cloud-admin
      max-lifetime: 480000
      idle-timeout: 300000
      connection-timeout: 10000
      read-only: false
# ===============================
# = Feign Config
# ===============================
feign:
  httpclient:
    enabled: false
    max-connections: 1000
    time-to-live: 900
    time-to-live-unit: seconds
    follow-redirects: true
  okhttp:
    enabled: true
  sentinel:
    enabled: true
  client:
    config:
      default:
        connect-timeout: 10000
        read-timeout: 30000
        loggerLevel: full
# ===============================
# = Security Config
# ===============================
security:
  oauth2:
    resource:
      token-info-uri: http://oauth2-server/open/inner/check-token
acp:
  swagger:
    enabled: true
  cloud:
    zookeeper:
      connect: 127.0.0.1:21810